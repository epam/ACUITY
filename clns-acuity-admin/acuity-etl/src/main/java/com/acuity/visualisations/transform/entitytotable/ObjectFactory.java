/*
 * Copyright 2021 The University of Manchester
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.02 at 01:58:38 PM MSK 
//


package com.acuity.visualisations.transform.entitytotable;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.acuity.visualisations.transform.entitytotable package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private static final QName ROOT_QNAME = new QName("http://visualisations.acuity.com/EntitiesToTables", "root");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
     *  com.acuity.visualisations.transform.entitytotable
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link EntityTablesRule }
     */
    public EntityTablesRule createEntityTablesRule() {
        return new EntityTablesRule();
    }

    /**
     * Create an instance of {@link EntityTableBaseRule }
     */
    public EntityTableBaseRule createEntityTableBaseRule() {
        return new EntityTableBaseRule();
    }

    /**
     * Create an instance of {@link EntityTablesRootRule }
     */
    public EntityTablesRootRule createEntityTablesRootRule() {
        return new EntityTablesRootRule();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EntityTablesRootRule }{@code >}}
     */
    @XmlElementDecl(namespace = "http://visualisations.acuity.com/EntitiesToTables", name = "root")
    public JAXBElement<EntityTablesRootRule> createRoot(EntityTablesRootRule value) {
        return new JAXBElement<EntityTablesRootRule>(ROOT_QNAME, EntityTablesRootRule.class, null, value);
    }

}
