<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource" p:fetchSize="100"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    <bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.OracleJdbc4NativeJdbcExtractor"/>-->

<!--    <bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">-->
<!--        <property name="nativeJdbcExtractor">-->
<!--            <ref bean="nativeJdbcExtractor"/>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource" p:transactionManager-ref="transactionManager">
<!--        <property name="lobHandler" ref="oracleLobHandler"/>-->
    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SyncTaskExecutor"/>
        </property>
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean id="jobRegistryBeanPostProcessor"
          class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
        <property name="jobRegistry" ref="jobRegistry"/>
    </bean>

    <bean id="jobLauncherDetails" class="com.acuity.visualisations.task.JobLauncherDetails">
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="jobLocator" ref="jobRegistry"/>
    </bean>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
        <property name="jobExplorer" ref="jobExplorer"/>
        <property name="jobRepository" ref="jobRepository"/>
        <property name="jobRegistry" ref="jobRegistry"/>
        <property name="jobLauncher" ref="jobLauncher"/>
    </bean>

    <bean id="retryAdvice" class="org.springframework.retry.interceptor.RetryOperationsInterceptor">
        <property name="retryOperations">
            <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
                <property name="backOffPolicy">
                    <bean id="BackOffPolicy"
                          class="org.springframework.retry.backoff.ExponentialBackOffPolicy"/>
                </property>
                <property name="retryPolicy">
                    <bean id="retryPolicy" class="org.springframework.retry.policy.SimpleRetryPolicy">
                        <constructor-arg name="maxAttempts" value="15"/>
                        <constructor-arg name="retryableExceptions">
                            <map>
                                <entry key="org.springframework.dao.DataAccessException" value="true"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </property>
                <property name="listeners">
                    <array>
                        <bean class="com.acuity.visualisations.batch.listener.DataAccessExceptionRetryListener"/>
                    </array>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="myBatisMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.acuity.visualisations"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <aop:config>
        <aop:pointcut id="retryPointcut"
                      expression="execution(* org.springframework.batch.core.launch.support.SimpleJobLauncher.*(..))"/>
        <aop:advisor advice-ref="retryAdvice" pointcut-ref="retryPointcut"/>
    </aop:config>


</beans>
