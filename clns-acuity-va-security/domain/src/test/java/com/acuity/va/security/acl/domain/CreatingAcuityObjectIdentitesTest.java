/*
 * Copyright 2021 The University of Manchester
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.acuity.va.security.acl.domain;

import org.junit.*;

import static org.assertj.core.api.Assertions.assertThat;

/**
 *
 * @author glen
 */
public class CreatingAcuityObjectIdentitesTest {

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityDrugProgramme() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(DrugProgramme.class.getSimpleName(), 12L);

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isNull();
        assertThat(drugProgramme.getType()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityDrugProgramme1() {

        DrugProgramme drugProgramme = AcuityObjectIdentityImpl.createDrugProgramme(DrugProgramme.class.getSimpleName(), 12L);

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isNull();
        assertThat(drugProgramme.getType()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_DetectDrugProgramme() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(DrugProgramme.class.getSimpleName(), 12L, "name");

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isEqualTo("name");
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.getType()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_DetectDrugProgramme_autoGeneratedId() {

        String name = "TestName";
        long autoGeneratedId = new DrugProgramme("TestName").id;

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(DrugProgramme.class.getSimpleName(), autoGeneratedId, name);

        assertThat(drugProgramme.getId()).isEqualTo(autoGeneratedId);
        assertThat(drugProgramme.getName()).isEqualTo(name);
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.getType()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.isAutoGeneratedId()).isTrue();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityClinicalStudy() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(ClinicalStudy.class.getSimpleName(), 12L);

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isNull();
        assertThat(drugProgramme.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(drugProgramme).isInstanceOf(ClinicalStudy.class);
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityClinicalStudy1() {

        ClinicalStudy clinicalStudy = AcuityObjectIdentityImpl.createClinicalStudy(ClinicalStudy.class.getSimpleName(), 12L);

        assertThat(clinicalStudy.getId()).isEqualTo(12L);
        assertThat(clinicalStudy.getName()).isNull();
        assertThat(clinicalStudy.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_DetectClinicalStudy() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(ClinicalStudy.class.getSimpleName(), 12L, "name");

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isEqualTo("name");
        assertThat(drugProgramme).isInstanceOf(ClinicalStudy.class);
        assertThat(drugProgramme.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityDataset() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(AcuityDataset.class.getSimpleName(), 12L);

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isNull();
        assertThat(drugProgramme.getType()).isEqualTo(AcuityDataset.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(Dataset.class.getName());
        assertThat(drugProgramme).isInstanceOf(AcuityDataset.class);
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_AcuityDataset1() {

        Dataset dataset = AcuityObjectIdentityImpl.createDataset(AcuityDataset.class.getSimpleName(), 12L);

        assertThat(dataset.getId()).isEqualTo(12L);
        assertThat(dataset.getName()).isNull();
        assertThat(dataset.getType()).isEqualTo(AcuityDataset.class.getName());
        assertThat(dataset.getSupertype()).isEqualTo(Dataset.class.getName());
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }
   
    @Test
    public void shouldCreateAcuityObjectIdentitiesCorrectly_DetectDataset() {

        AcuityObjectIdentity drugProgramme = AcuityObjectIdentityImpl.create(DetectDataset.class.getSimpleName(), 12L, "name");

        assertThat(drugProgramme.getId()).isEqualTo(12L);
        assertThat(drugProgramme.getName()).isEqualTo("name");
        assertThat(drugProgramme).isInstanceOf(DetectDataset.class);
        assertThat(drugProgramme.getType()).isEqualTo(DetectDataset.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(Dataset.class.getName());
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("detect");
    }   
    
    @Test
    public void shouldCreateAcuityDrugProgrammeCorrectly() {

        DrugProgramme drugProgramme = new DrugProgramme(10L);

        assertThat(drugProgramme.getId()).isEqualTo(drugProgramme.id);
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.getType()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.getSupertype()).isEqualTo(DrugProgramme.class.getName());
        assertThat(drugProgramme.thisDrugProgrammeType()).isTrue();
        assertThat(drugProgramme.thisClinicalStudyType()).isFalse();
        assertThat(drugProgramme.thisDatasetType()).isFalse();
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityDrugProgrammeCorrectly1() {

        DrugProgramme drugProgramme = new DrugProgramme(10L, "DP1");

        assertThat(drugProgramme.getId()).isEqualTo(drugProgramme.id);
        assertThat(drugProgramme.getName()).isEqualTo("DP1");
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.thisDrugProgrammeType()).isTrue();
        assertThat(drugProgramme.thisClinicalStudyType()).isFalse();
        assertThat(drugProgramme.thisDatasetType()).isFalse();
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
    }

    @Test
    public void shouldCreateDetectDrugProgrammeCorrectly() {

        DrugProgramme drugProgramme = new DrugProgramme("DP1");

        assertThat(drugProgramme.getId()).isNotNull();
        assertThat(drugProgramme.getName()).isEqualTo("DP1");
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.thisDrugProgrammeType()).isTrue();
        assertThat(drugProgramme.thisClinicalStudyType()).isFalse();
        assertThat(drugProgramme.thisDatasetType()).isFalse();
        assertThat(drugProgramme.isAutoGeneratedId()).isTrue();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateDetectDrugProgrammeCorrectly1() {

        DrugProgramme drugProgramme = new DrugProgramme(1L, "DP1");

        assertThat(drugProgramme.getId()).isEqualTo(drugProgramme.id);
        assertThat(drugProgramme.getName()).isEqualTo("DP1");
        assertThat(drugProgramme).isInstanceOf(DrugProgramme.class);
        assertThat(drugProgramme.thisDrugProgrammeType()).isTrue();
        assertThat(drugProgramme.thisClinicalStudyType()).isFalse();
        assertThat(drugProgramme.thisDatasetType()).isFalse();
        assertThat(drugProgramme.isAutoGeneratedId()).isFalse();
        assertThat(drugProgramme.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityClinicalStudyCorrectly() {

        ClinicalStudy clinicalStudy = new ClinicalStudy(10L);

        assertThat(clinicalStudy.getId()).isEqualTo(clinicalStudy.id);
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityClinicalStudyCorrectly1() {

        ClinicalStudy clinicalStudy = new ClinicalStudy(10L, "CS1");

        assertThat(clinicalStudy.getId()).isEqualTo(clinicalStudy.id);
        assertThat(clinicalStudy.getName()).isEqualTo("CS1");
        assertThat(clinicalStudy.getCode()).isEqualTo("CS1");
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateDetectClinicalStudyCorrectly() {

        ClinicalStudy clinicalStudy = new ClinicalStudy(10L, "cs1");

        assertThat(clinicalStudy.getId()).isEqualTo(clinicalStudy.id);
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateDetectClinicalStudyCorrectly1() {

        ClinicalStudy clinicalStudy = new ClinicalStudy(10L, "CS1");

        assertThat(clinicalStudy.getId()).isEqualTo(clinicalStudy.id);
        assertThat(clinicalStudy.getName()).isEqualTo("CS1");
        assertThat(clinicalStudy.getCode()).isEqualTo("CS1");
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }
    
    @Test
    public void shouldCreateDetectClinicalStudyCorrectly2() {

        ClinicalStudy clinicalStudy = new ClinicalStudy(10L, "CS code", "CS name");

        assertThat(clinicalStudy.getId()).isEqualTo(clinicalStudy.id);
        assertThat(clinicalStudy.getName()).isEqualTo("CS name");
        assertThat(clinicalStudy.getCode()).isEqualTo("CS code");
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isFalse();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }
    
    @Test
    public void shouldCreateDetectClinicalStudyCorrectly3() {

        ClinicalStudy clinicalStudy = new ClinicalStudy("CS code", "CS name");

        assertThat(clinicalStudy.getName()).isEqualTo("CS name");
        assertThat(clinicalStudy.getCode()).isEqualTo("CS code");
        assertThat(clinicalStudy).isInstanceOf(ClinicalStudy.class);
        assertThat(clinicalStudy.getType()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.getSupertype()).isEqualTo(ClinicalStudy.class.getName());
        assertThat(clinicalStudy.thisDrugProgrammeType()).isFalse();
        assertThat(clinicalStudy.thisClinicalStudyType()).isTrue();
        assertThat(clinicalStudy.thisDatasetType()).isFalse();
        assertThat(clinicalStudy.isAutoGeneratedId()).isTrue();
        assertThat(clinicalStudy.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(clinicalStudy.getShortNameByType()).isEqualTo("none");
    }

    @Test
    public void shouldCreateAcuityDatasetCorrectly() {

        Dataset dataset = new AcuityDataset(10L);

        assertThat(dataset.getId()).isEqualTo(dataset.id);
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.thisDrugProgrammeType()).isFalse();
        assertThat(dataset.thisClinicalStudyType()).isFalse();
        assertThat(dataset.thisDatasetType()).isTrue();
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }

    @Test
    public void shouldCreateAcuityDatasetCorrectly1() {

        Dataset dataset = new AcuityDataset(10L);

        assertThat(dataset.getId()).isEqualTo(dataset.id);
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.thisDrugProgrammeType()).isFalse();
        assertThat(dataset.thisClinicalStudyType()).isFalse();
        assertThat(dataset.thisDatasetType()).isTrue();
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }

    @Test
    public void shouldCreateDetectDatasetCorrectly() {

        Dataset dataset = new AcuityDataset(10L);

        assertThat(dataset.getId()).isEqualTo(dataset.id);
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.getType()).isEqualTo(AcuityDataset.class.getName());
        assertThat(dataset.getSupertype()).isEqualTo(Dataset.class.getName());
        assertThat(dataset.thisDrugProgrammeType()).isFalse();
        assertThat(dataset.thisClinicalStudyType()).isFalse();
        assertThat(dataset.thisDatasetType()).isTrue();
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }

    @Test
    public void shouldCreateDetectDatasetCorrectly1() {

        Dataset dataset = new AcuityDataset(10L);

        assertThat(dataset.getId()).isEqualTo(dataset.id);
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.thisDrugProgrammeType()).isFalse();
        assertThat(dataset.thisClinicalStudyType()).isFalse();
        assertThat(dataset.thisDatasetType()).isTrue();
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }
    
    @Test
    public void shouldCreateDetectDatasetCorrectly2() {

        Dataset dataset = new AcuityDataset(10L, "name");

        assertThat(dataset.getId()).isEqualTo(dataset.id);
        assertThat(dataset.getName()).isEqualTo("name");
        assertThat(dataset).isInstanceOf(AcuityDataset.class);
        assertThat(dataset.thisDrugProgrammeType()).isFalse();
        assertThat(dataset.thisClinicalStudyType()).isFalse();
        assertThat(dataset.thisDatasetType()).isTrue();
        assertThat(dataset.isAutoGeneratedId()).isFalse();
        assertThat(dataset.getDrugProgrammeClass()).isEqualTo(DrugProgramme.class);
        assertThat(dataset.getShortNameByType()).isEqualTo("acuity");
    }
    
    @Test
    public void shouldWorkWithNullName() {

        DrugProgramme dp = new DrugProgramme("");

        assertThat(dp.getId()).isEqualTo(1120186595L);
        assertThat(dp.getName()).isEqualTo("");
    }
}
